# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose run migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.7'

volumes:
  db_data:

x-shared_environment: &shared_environment
  DATABASE_HOST: db
  DATABASE_NAME: vapor_database
  DATABASE_USERNAME: vapor_username
  DATABASE_PASSWORD: vapor_password

services:
  app:
    image: collab-with-me:latest
    build:
      context: ./CollabWithMe
    environment:
      <<: *shared_environment
    depends_on:
      - db
    ports:
      - '8080:8080'
    command:
      [
        'serve',
        '--env',
        'production',
        '--hostname',
        '0.0.0.0',
        '--port',
        '8080',
      ]
  migrate:
    image: collab-with-me:latest
    build:
      context: ./CollabWithMe
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ['migrate', '--yes']
    deploy:
      replicas: 0
  revert:
    image: collab-with-me:latest
    build:
      context: ./CollabWithMe
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ['migrate', '--revert', '--yes']
    deploy:
      replicas: 0
  db:
    image: postgres:12-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      <<: *shared_environment
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
  web:
    image: collab-with-me-react:latest
    build:
      context: ./client
    depends_on:
      - app
    ports:
      - '3000:3000'
